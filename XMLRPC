================================================================================
                               getSkills
================================================================================

parameters: login (string), password (string), modShortName (string), accountIds (array of ints).

modShortName values: "BA", "EVO", "KP", "NOTA", "S1944", "TA", "XTA", "ZK"


It returns a map with following keys: status (int), results (array of maps).

"status" values:
0: OK, 1: authentication failed, 2: invalid params
(the "results" key is only present if status=0)

"results" is an array of maps having following keys: accountId (int), status (int), privacyMode (int), skills (array)

"status" values:
0: OK, 1: invalid accountId, 2: unknown skill
(the privacyMode and skills keys are only present if status=0)

"skills" is an array of 5 strings containing skill data in following order:
    Duel.mu|Duel.sigma , Ffa.mu|Ffa.sigma , Team.mu|Team.sigma , TeamFfa.mu|TeamFfa.sigma, Global.mu|Global.sigma

Example:
    33.15|1.08 , 26.00|8.33 , 38.81|1.78 , 30.16|8.33, 36.13|0.95



================================================================================
                                getPref
================================================================================

parameters: login (string), password (string), accountId (int), prefName (string)


It returns a map with following keys: status (int), result (string)

"status" values:
0: OK, 1: authentication failed, 2: invalid params
(the "result" key is only present if status=0)



================================================================================
                                setPref
================================================================================

parameters: login (string), password (string), accountId (int), prefName (string) [, value (string)]

"value" is optional, if not provided the preference is set back to default value in SLDB.


It returns a map with only one key: status (int)

"status" values are the same as for getPref (the preference is only updated if status=0)



================================================================================
                                getMatchSkills
================================================================================

parameters: login (string), password (string), gameIds (array of strings)


It returns a map with following keys: status (int), results (array of maps).

"status" values:
0: OK, 1: authentication failed, 2: invalid params
(the "results" key is only present if status=0)

"results" is an array of maps having following keys: gameId (string), status (int), gameType (string), players (array of maps)

"status" values:
0: OK, 1: invalid gameId value, 2: unknown or unrated gameId
(the "gameType" and "players" keys are only present if status=0)

"gameType" values: "Duel", "FFA", "Team", "TeamFFA"

"players" is an array of maps having following keys: accountId (int), privacyMode (int), skills (array of strings)

"skills" is an array of 4 strings containing skill data in following order:
    muBefore|sigmaBefore , muAfter|sigmaAfter , globalMuBefore|globalSigmaBefore , globalMuAfter|globalSigmaAfter

Example:
    18.18|2.54 , 18.93|2.51 , 19.32|2.44 , 20.07|2.42

Only the ratings specific to the gameType of the gameId and the global ratings are provided, as other ratings don't change.



================================================================================
                                getLeaderboards
================================================================================

parameters: login (string), password (string), modShortName (string), gameTypes (array of strings)

allowed gameType values: "Duel", "FFA", "Team", "TeamFFA", "Global"


It returns a map with following keys: status (int), results (array of maps).

"status" values:
0: OK, 1: authentication failed, 2: invalid params
(the "results" key is only present if status=0)

"results" is an array of maps having following keys: gameType (string), status (int), players (array of maps)

"status" values:
0: OK, 1: invalid gameType
(the "players" key is only present if status=0)

"players" is an array of maps having following keys: accountId (int), name (string), inactivity (int), trustedSkill (string), estimatedSkill (string), uncertainty (string)

"trustedSkill", "estimatedSkill" and "uncertainty" are transmitted as strings to avoid rounding approximations when sent as floats.

"name" is provided in case you want to show the same names as SLDB

The leaderboard size is 20, as when saying !leaderboard to SLDB. But the returned players array can be of smaller size (and even empty for totally unrated mods), in case not enough players have been rated yet.



================================================================================
                                getPlayerStats
================================================================================

parameters: login (string), password (string), modShortName (string), accountId (int)


It returns a map with following keys: status (int), results (map of arrays).

"status" values:
0: OK, 1: authentication failed, 2: invalid params
(the "results" key is only present if status=0)

"results" is a map indexed by gameType ("Duel", "FFA", "Team", "TeamFFA"), giving the following stats array for each one of these game types: nbOfGamesLost (int), nbOfGamesWon (int), nbOfGamesUndecided (int)



================================================================================
                                getPlayerSkillGraphs
================================================================================

parameters: login (string), password (string), modShortName (string), accountId (int)


It returns a map with following keys: status (int), results (map of maps).

"status" values:
0: OK, 1: authentication failed, 2: invalid params
(the "results" key is only present if status=0)

"results" is a map indexed by game type ("Duel", "FFA", "Team", "TeamFFA", "Global") of maps having following keys: status (int), graph (base64)

"status" values:
0: OK, 1: unrated account for this game type
(the "graph" key is only present if status=0)

"graph" contains a base64 encoded png image